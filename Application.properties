## Mysql
spring.datasource.url=jdbc:mysql://localhost:3306/learn
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.datasource.username=Hakim
spring.datasource.password=hakim@123
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.database=mysql
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# H2

logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
spring.h2.console.enabled=true
spring.datasource.generate-unique-name=false
spring.datasource.name=learn
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=h2
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false
#spring.sql.init.mode=always

## Postgresql

spring.datasource.url=jdbc:postgresql://localhost:5432/spring_batch
spring.datasource.username=postgres
spring.datasource.password=hakim@123
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=postgresql
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.open-in-view=false
#spring.sql.init.mode=always

server.port = 9090

### Shell
spring.shell.command.completion.enabled=true
spring.shell.command.help.enabled=true
spring.shell.history.enabled=true
spring.shell.command.quit.enabled=true
spring.shell.script.enabled=true
spring.shell.interactive.enabled=true
spring.shell.command.clear.enabled=true
spring.shell.help.command=help

spring.main.banner-mode=off

### Reactive R2DBC
spring.r2dbc.url=r2dbc:postgresql://localhost:5432/learn
spring.r2dbc.username=postgres
spring.r2dbc.password=hakim@123

## Security
spring.security.user.name=Hakim
spring.security.user.password=hakim@123

## Actuator
management.endpoint.health.group.custom.show-components=when_authorized
management.endpoint.health.group.custom.show-details=when_authorized
management.endpoints.web.exposure.include=*
management.endpoint.shutdown.enabled=true

## MVC
spring.mvc.view.prefix=/views/
spring.mvc.view.suffix=.jsp

# OAuth

# google auth config
spring.security.oauth2.client.registration.google.client-id=
spring.security.oauth2.client.registration.google.client-secret=
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.scope=email,profile


# github auth config
spring.security.oauth2.client.registration.github.client-id=
spring.security.oauth2.client.registration.github.client-secret=
spring.security.oauth2.client.registration.github.client-name=github
spring.security.oauth2.client.registration.github.scope=email,profile


## Eureka Server - Service Registry
eureka.instance.hostname=localhost
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false

## Eureka Client 
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.instance.prefer-ip-address=true
eureka.client.service-url.defaultZone = http://localhost:8085/eureka
spring.application.name=USER-SERVICE

## Getway Service
# First make the service a client service
spring.cloud.gateway.routes[0].id=USER-SERVICE
spring.cloud.gateway.routes[0].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[0].predicates=Path=/user/**

## yml 
server:
  port: 8086

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8085/eureka
  instance:
    prefer-ip-address: true

spring:
  application:
    name: API-GATEWAY
  cloud:
    gateway:
      routes:
        -   id: USER-SERVICE
            predicates:
              - Path=/user/**
            uri: lb://USER-SERVICE
        -   id: HOTEL-SERVICE
            predicates:
              - Path=/hotel/**,/staff/get-all
            uri: lb://HOTEL-SERVICE
        -   id: RATING-SERVICE
            predicates:
              - Path=/rating/**
            uri: lb://RATING-SERVICE

## Config Service
spring.cloud.config.server.git.uri=https://github.com/sadiul-hakim/micro-service-config-server
spring.cloud.config.server.git.clone-on-start=true

## Config Client
spring.config.import=configserver:http://localhost:8087

## Actuator
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

## Resilience Curcuit Breaker
resilience4j.circuitbreaker.instances.RATING_HOTEL_BREAKER.register-health-indicator=true
resilience4j.circuitbreaker.instances.RATING_HOTEL_BREAKER.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.RATING_HOTEL_BREAKER.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.RATING_HOTEL_BREAKER.minimum-number-of-calls=8
resilience4j.circuitbreaker.instances.RATING_HOTEL_BREAKER.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.RATING_HOTEL_BREAKER.wait-duration-in-open-state.seconds=5
resilience4j.circuitbreaker.instances.RATING_HOTEL_BREAKER.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.RATING_HOTEL_BREAKER.sliding-window-size=10
resilience4j.circuitbreaker.instances.RATING_HOTEL_BREAKER.sliding-window-type=count_based

## Api Gateway Okta Security
okta:
  oauth2:
    issuer: https://dev-54607713.okta.com/oauth2/default
    audience: api://default
    client-id:
    client-secret: 
    scopes: openid, profile, email, offline_access

## redirect url : http://localhost:8086/login/oauth2/code/okta

## Client Service Okta Security 
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-54607713.okta.com/oauth2/default
spring.security.oauth2.client.registration.my-internal-client.provider=okta
spring.security.oauth2.client.registration.my-internal-client.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.my-internal-client.scope[0]=internal
spring.security.oauth2.client.registration.my-internal-client.client-id=
spring.security.oauth2.client.registration.my-internal-client.client-secret=
spring.security.oauth2.client.provider.okta.issuer-uri=https://dev-54607713.okta.com/oauth2/default

okta.oauth2.issuer=https://dev-54607713.okta.com/oauth2/default
okta.oauth2.audience=api://default
